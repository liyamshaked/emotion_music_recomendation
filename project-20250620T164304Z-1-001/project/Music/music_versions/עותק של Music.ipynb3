{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1cawwe_nsyEYbQdKJCq-sPIgSYMgGY20K","timestamp":1739996285656}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Imports"],"metadata":{"id":"54Nc2GdGPRUh"}},{"cell_type":"code","execution_count":367,"metadata":{"id":"RqVyx74iEy3b","executionInfo":{"status":"ok","timestamp":1746110530542,"user_tz":-180,"elapsed":15,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}}},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import pandas as pd\n","from sklearn import preprocessing\n","from sklearn.preprocessing import StandardScaler, OneHotEncoder\n","import seaborn as sns\n","import google.colab\n","import numpy as np\n","from sklearn.feature_selection import mutual_info_regression\n","import scipy.stats as stats\n","from sklearn.feature_selection import f_classif"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SZvKVjc5UaO1","executionInfo":{"status":"ok","timestamp":1746110534975,"user_tz":-180,"elapsed":2640,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"cd2879a3-bd76-455c-9cde-7f0908517858"},"execution_count":368,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["music_df = pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/project/Music/light_spotify_dataset.csv\")"],"metadata":{"id":"FXd5PEY6eP8h","executionInfo":{"status":"ok","timestamp":1746110549511,"user_tz":-180,"elapsed":1134,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}}},"execution_count":370,"outputs":[]},{"cell_type":"code","source":["music_df.groupby('emotion').size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"id":"EFeQw65FlEq1","executionInfo":{"status":"ok","timestamp":1746110550325,"user_tz":-180,"elapsed":48,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"2e0b67cb-8493-4cbf-d562-6de93bf22709"},"execution_count":371,"outputs":[{"output_type":"execute_result","data":{"text/plain":["emotion\n","True            7\n","anger       47192\n","angry           1\n","fear        11960\n","joy         91532\n","love        12802\n","pink            1\n","sadness     71160\n","surprise     2332\n","thirst          1\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","    <tr>\n","      <th>emotion</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>True</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>anger</th>\n","      <td>47192</td>\n","    </tr>\n","    <tr>\n","      <th>angry</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>fear</th>\n","      <td>11960</td>\n","    </tr>\n","    <tr>\n","      <th>joy</th>\n","      <td>91532</td>\n","    </tr>\n","    <tr>\n","      <th>love</th>\n","      <td>12802</td>\n","    </tr>\n","    <tr>\n","      <th>pink</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>sadness</th>\n","      <td>71160</td>\n","    </tr>\n","    <tr>\n","      <th>surprise</th>\n","      <td>2332</td>\n","    </tr>\n","    <tr>\n","      <th>thirst</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":371}]},{"cell_type":"code","source":["# prompt: find me the rows where the 'emotion' is: 'thirst', 'pink', ' True;\n","\n","thirst_rows = music_df[music_df['emotion'] == 'thirst']\n","pink_rows = music_df[music_df['emotion'] == 'pink']\n","true_rows = music_df[music_df['emotion'] == 'True']\n","\n","# Combine the results if needed\n","combined_rows = pd.concat([thirst_rows, pink_rows, true_rows])\n","\n","combined_rows\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"wlr4hJ_Cl2eA","executionInfo":{"status":"ok","timestamp":1746110552169,"user_tz":-180,"elapsed":180,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"768db1e8-de20-44e3-e3e4-8fea99c50acf"},"execution_count":372,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       artist                         song emotion  variance  \\\n","164838           Jason Derulo      Swalla After Dark Remix  thirst  0.833514   \n","115630             Pink Floyd                Vegetable Man    pink  0.833514   \n","122462  Nusrat Fateh Ali Khan  Dam Mast Qalandar Mast Mast    True  0.833514   \n","147115           Leon Bridges          Twistin And Groovin    True  0.833514   \n","150480            Kota Suzuki                       Legacy    True  0.833514   \n","154228         Kendrick Lamar                   Mortal Man    True  0.833514   \n","176230            Gravediggaz                360 Questions    True  0.833514   \n","187411              FEVER 333                      Trigger    True  0.833514   \n","189650              Eluveitie                        Epona    True  0.833514   \n","\n","                          Genre  Release Date     Key  Tempo  Loudness  \\\n","164838                      pop          2017  G# min     79     -5.92   \n","115630              progressive          2016   B Maj    126    -11.32   \n","122462  Unknown,Unknown,Unknown          1992  D# min    153    -13.00   \n","147115                     soul          2015  C# min    118     -6.73   \n","150480  Unknown,Unknown,Unknown          2019   C Maj    115     -8.10   \n","154228                      rap          2015  A# min     87     -9.04   \n","176230                  hip-hop          1995   G Maj    170     -8.66   \n","187411                    metal          2018  C# Maj    112     -4.00   \n","189650                    metal          2017   D min    145     -6.56   \n","\n","       Explicit  Popularity  Energy  Danceability  Positiveness  Speechiness  \\\n","164838      Yes          28      67            35            54           39   \n","115630       No          21      64            39            36            4   \n","122462       No          26      59            44            72            4   \n","147115       No          47      52            68            51            3   \n","150480       No          37      31            35             6            4   \n","154228      Yes          59      52            57            42           75   \n","176230      Yes          39      72            71            58           28   \n","187411      Yes          28      99            63            38           43   \n","189650       No          52      95            50            47            9   \n","\n","        Liveness  Acousticness  Instrumentalness  \n","164838        40            42                 0  \n","115630        86             1                 0  \n","122462        29             5                 0  \n","147115        12            38                 0  \n","150480        10            59                 0  \n","154228        71            66                 0  \n","176230        21            37                 0  \n","187411        89             1                 0  \n","189650        38             0                 4  "],"text/html":["\n","  <div id=\"df-b1af4fda-6c05-42ba-8e7c-f49bf917050e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>artist</th>\n","      <th>song</th>\n","      <th>emotion</th>\n","      <th>variance</th>\n","      <th>Genre</th>\n","      <th>Release Date</th>\n","      <th>Key</th>\n","      <th>Tempo</th>\n","      <th>Loudness</th>\n","      <th>Explicit</th>\n","      <th>Popularity</th>\n","      <th>Energy</th>\n","      <th>Danceability</th>\n","      <th>Positiveness</th>\n","      <th>Speechiness</th>\n","      <th>Liveness</th>\n","      <th>Acousticness</th>\n","      <th>Instrumentalness</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>164838</th>\n","      <td>Jason Derulo</td>\n","      <td>Swalla After Dark Remix</td>\n","      <td>thirst</td>\n","      <td>0.833514</td>\n","      <td>pop</td>\n","      <td>2017</td>\n","      <td>G# min</td>\n","      <td>79</td>\n","      <td>-5.92</td>\n","      <td>Yes</td>\n","      <td>28</td>\n","      <td>67</td>\n","      <td>35</td>\n","      <td>54</td>\n","      <td>39</td>\n","      <td>40</td>\n","      <td>42</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>115630</th>\n","      <td>Pink Floyd</td>\n","      <td>Vegetable Man</td>\n","      <td>pink</td>\n","      <td>0.833514</td>\n","      <td>progressive</td>\n","      <td>2016</td>\n","      <td>B Maj</td>\n","      <td>126</td>\n","      <td>-11.32</td>\n","      <td>No</td>\n","      <td>21</td>\n","      <td>64</td>\n","      <td>39</td>\n","      <td>36</td>\n","      <td>4</td>\n","      <td>86</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>122462</th>\n","      <td>Nusrat Fateh Ali Khan</td>\n","      <td>Dam Mast Qalandar Mast Mast</td>\n","      <td>True</td>\n","      <td>0.833514</td>\n","      <td>Unknown,Unknown,Unknown</td>\n","      <td>1992</td>\n","      <td>D# min</td>\n","      <td>153</td>\n","      <td>-13.00</td>\n","      <td>No</td>\n","      <td>26</td>\n","      <td>59</td>\n","      <td>44</td>\n","      <td>72</td>\n","      <td>4</td>\n","      <td>29</td>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>147115</th>\n","      <td>Leon Bridges</td>\n","      <td>Twistin And Groovin</td>\n","      <td>True</td>\n","      <td>0.833514</td>\n","      <td>soul</td>\n","      <td>2015</td>\n","      <td>C# min</td>\n","      <td>118</td>\n","      <td>-6.73</td>\n","      <td>No</td>\n","      <td>47</td>\n","      <td>52</td>\n","      <td>68</td>\n","      <td>51</td>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>38</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>150480</th>\n","      <td>Kota Suzuki</td>\n","      <td>Legacy</td>\n","      <td>True</td>\n","      <td>0.833514</td>\n","      <td>Unknown,Unknown,Unknown</td>\n","      <td>2019</td>\n","      <td>C Maj</td>\n","      <td>115</td>\n","      <td>-8.10</td>\n","      <td>No</td>\n","      <td>37</td>\n","      <td>31</td>\n","      <td>35</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>59</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>154228</th>\n","      <td>Kendrick Lamar</td>\n","      <td>Mortal Man</td>\n","      <td>True</td>\n","      <td>0.833514</td>\n","      <td>rap</td>\n","      <td>2015</td>\n","      <td>A# min</td>\n","      <td>87</td>\n","      <td>-9.04</td>\n","      <td>Yes</td>\n","      <td>59</td>\n","      <td>52</td>\n","      <td>57</td>\n","      <td>42</td>\n","      <td>75</td>\n","      <td>71</td>\n","      <td>66</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>176230</th>\n","      <td>Gravediggaz</td>\n","      <td>360 Questions</td>\n","      <td>True</td>\n","      <td>0.833514</td>\n","      <td>hip-hop</td>\n","      <td>1995</td>\n","      <td>G Maj</td>\n","      <td>170</td>\n","      <td>-8.66</td>\n","      <td>Yes</td>\n","      <td>39</td>\n","      <td>72</td>\n","      <td>71</td>\n","      <td>58</td>\n","      <td>28</td>\n","      <td>21</td>\n","      <td>37</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>187411</th>\n","      <td>FEVER 333</td>\n","      <td>Trigger</td>\n","      <td>True</td>\n","      <td>0.833514</td>\n","      <td>metal</td>\n","      <td>2018</td>\n","      <td>C# Maj</td>\n","      <td>112</td>\n","      <td>-4.00</td>\n","      <td>Yes</td>\n","      <td>28</td>\n","      <td>99</td>\n","      <td>63</td>\n","      <td>38</td>\n","      <td>43</td>\n","      <td>89</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>189650</th>\n","      <td>Eluveitie</td>\n","      <td>Epona</td>\n","      <td>True</td>\n","      <td>0.833514</td>\n","      <td>metal</td>\n","      <td>2017</td>\n","      <td>D min</td>\n","      <td>145</td>\n","      <td>-6.56</td>\n","      <td>No</td>\n","      <td>52</td>\n","      <td>95</td>\n","      <td>50</td>\n","      <td>47</td>\n","      <td>9</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1af4fda-6c05-42ba-8e7c-f49bf917050e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b1af4fda-6c05-42ba-8e7c-f49bf917050e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b1af4fda-6c05-42ba-8e7c-f49bf917050e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-73fee052-bae9-41dd-9983-4c87a88bab67\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73fee052-bae9-41dd-9983-4c87a88bab67')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-73fee052-bae9-41dd-9983-4c87a88bab67 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_bf84bd0e-ef9b-4db6-bd79-53ab5f274030\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('combined_rows')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bf84bd0e-ef9b-4db6-bd79-53ab5f274030 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('combined_rows');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"combined_rows","summary":"{\n  \"name\": \"combined_rows\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"artist\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"FEVER 333\",\n          \"Pink Floyd\",\n          \"Kendrick Lamar\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"song\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Trigger\",\n          \"Vegetable Man\",\n          \"Mortal Man\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"emotion\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"thirst\",\n          \"pink\",\n          \"True\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"variance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1775693440128312e-16,\n        \"min\": 0.8335142456515902,\n        \"max\": 0.8335142456515902,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.8335142456515902\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"pop\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Release Date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 1992,\n        \"max\": 2019,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2017\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Key\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"C# Maj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tempo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 79,\n        \"max\": 170,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          112\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loudness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.769610883218876,\n        \"min\": -13.0,\n        \"max\": -4.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          -4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Explicit\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Popularity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 21,\n        \"max\": 59,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 31,\n        \"max\": 99,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          64\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Danceability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 35,\n        \"max\": 71,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Positiveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 6,\n        \"max\": 72,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Speechiness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 3,\n        \"max\": 75,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Liveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30,\n        \"min\": 10,\n        \"max\": 89,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          89\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Acousticness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26,\n        \"min\": 0,\n        \"max\": 66,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Instrumentalness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":372}]},{"cell_type":"code","source":["# prompt: create a copy of the dataframe, then for it: remove the rows where the 'emotion' is: 'thirst', 'pink', ' True';\n","\n","df = music_df.copy()\n","df = df[~df['emotion'].isin(['thirst', 'pink', 'True'])]\n"],"metadata":{"id":"LC8oHbMhmZlf","executionInfo":{"status":"ok","timestamp":1746110553937,"user_tz":-180,"elapsed":51,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}}},"execution_count":373,"outputs":[]},{"cell_type":"code","source":["df.loc[df['emotion'] == 'angry', 'emotion'] = 'anger'"],"metadata":{"id":"GyJQwl8Cmy5D","executionInfo":{"status":"ok","timestamp":1746110555263,"user_tz":-180,"elapsed":3,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}}},"execution_count":374,"outputs":[]},{"cell_type":"code","source":["df.groupby('emotion').size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"id":"7ZCKOJ0Qmvm6","executionInfo":{"status":"ok","timestamp":1746110556237,"user_tz":-180,"elapsed":26,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"4e53c690-5208-4acf-e288-66d7f4c3c6bd"},"execution_count":375,"outputs":[{"output_type":"execute_result","data":{"text/plain":["emotion\n","anger       47193\n","fear        11960\n","joy         91532\n","love        12802\n","sadness     71160\n","surprise     2332\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","    <tr>\n","      <th>emotion</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>anger</th>\n","      <td>47193</td>\n","    </tr>\n","    <tr>\n","      <th>fear</th>\n","      <td>11960</td>\n","    </tr>\n","    <tr>\n","      <th>joy</th>\n","      <td>91532</td>\n","    </tr>\n","    <tr>\n","      <th>love</th>\n","      <td>12802</td>\n","    </tr>\n","    <tr>\n","      <th>sadness</th>\n","      <td>71160</td>\n","    </tr>\n","    <tr>\n","      <th>surprise</th>\n","      <td>2332</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":375}]},{"cell_type":"code","source":["print(len(df))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZG7X6w6qfoIQ","executionInfo":{"status":"ok","timestamp":1746110559845,"user_tz":-180,"elapsed":5,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"bd19589d-6496-4f8a-d1f1-5bab578994ba"},"execution_count":376,"outputs":[{"output_type":"stream","name":"stdout","text":["236979\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"rQxNseIrWciI","executionInfo":{"status":"ok","timestamp":1746110560972,"user_tz":-180,"elapsed":214,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"51891306-5028-4758-e2bb-18e0cd63a9ce"},"execution_count":377,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            variance   Release Date          Tempo       Loudness  \\\n","count  236979.000000  236979.000000  236979.000000  236979.000000   \n","mean        0.658925    2008.472709     120.609603      -8.038653   \n","std         0.320740      14.756303      28.966392       3.842254   \n","min        -1.000000    1900.000000      33.000000     -46.770000   \n","25%         0.833514    2002.000000      97.000000      -9.890000   \n","50%         0.833514    2015.000000     120.000000      -7.190000   \n","75%         0.833514    2019.000000     140.000000      -5.370000   \n","max         1.000000    2024.000000     200.000000       3.740000   \n","\n","          Popularity         Energy   Danceability   Positiveness  \\\n","count  236979.000000  236979.000000  236979.000000  236979.000000   \n","mean       40.003802      62.369041      59.127788      47.657071   \n","std        18.770443      22.083439      17.069179      23.802009   \n","min         0.000000       0.000000       6.000000       0.000000   \n","25%        27.000000      48.000000      48.000000      29.000000   \n","50%        39.000000      64.000000      60.000000      47.000000   \n","75%        52.000000      80.000000      72.000000      66.000000   \n","max       100.000000     100.000000      99.000000      99.000000   \n","\n","         Speechiness       Liveness   Acousticness  Instrumentalness  \n","count  236979.000000  236979.000000  236979.000000     236979.000000  \n","mean       11.747606      19.904418      26.156136          5.440242  \n","std        12.442830      16.549985      29.047478         17.662833  \n","min         2.000000       1.000000       0.000000          0.000000  \n","25%         4.000000      10.000000       2.000000          0.000000  \n","50%         6.000000      13.000000      14.000000          0.000000  \n","75%        16.000000      25.000000      44.000000          0.000000  \n","max        97.000000     100.000000     100.000000        100.000000  "],"text/html":["\n","  <div id=\"df-d1654c74-d1b3-4c86-a517-23117d99f8f0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>variance</th>\n","      <th>Release Date</th>\n","      <th>Tempo</th>\n","      <th>Loudness</th>\n","      <th>Popularity</th>\n","      <th>Energy</th>\n","      <th>Danceability</th>\n","      <th>Positiveness</th>\n","      <th>Speechiness</th>\n","      <th>Liveness</th>\n","      <th>Acousticness</th>\n","      <th>Instrumentalness</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>236979.000000</td>\n","      <td>236979.000000</td>\n","      <td>236979.000000</td>\n","      <td>236979.000000</td>\n","      <td>236979.000000</td>\n","      <td>236979.000000</td>\n","      <td>236979.000000</td>\n","      <td>236979.000000</td>\n","      <td>236979.000000</td>\n","      <td>236979.000000</td>\n","      <td>236979.000000</td>\n","      <td>236979.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.658925</td>\n","      <td>2008.472709</td>\n","      <td>120.609603</td>\n","      <td>-8.038653</td>\n","      <td>40.003802</td>\n","      <td>62.369041</td>\n","      <td>59.127788</td>\n","      <td>47.657071</td>\n","      <td>11.747606</td>\n","      <td>19.904418</td>\n","      <td>26.156136</td>\n","      <td>5.440242</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.320740</td>\n","      <td>14.756303</td>\n","      <td>28.966392</td>\n","      <td>3.842254</td>\n","      <td>18.770443</td>\n","      <td>22.083439</td>\n","      <td>17.069179</td>\n","      <td>23.802009</td>\n","      <td>12.442830</td>\n","      <td>16.549985</td>\n","      <td>29.047478</td>\n","      <td>17.662833</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-1.000000</td>\n","      <td>1900.000000</td>\n","      <td>33.000000</td>\n","      <td>-46.770000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>6.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.833514</td>\n","      <td>2002.000000</td>\n","      <td>97.000000</td>\n","      <td>-9.890000</td>\n","      <td>27.000000</td>\n","      <td>48.000000</td>\n","      <td>48.000000</td>\n","      <td>29.000000</td>\n","      <td>4.000000</td>\n","      <td>10.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.833514</td>\n","      <td>2015.000000</td>\n","      <td>120.000000</td>\n","      <td>-7.190000</td>\n","      <td>39.000000</td>\n","      <td>64.000000</td>\n","      <td>60.000000</td>\n","      <td>47.000000</td>\n","      <td>6.000000</td>\n","      <td>13.000000</td>\n","      <td>14.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.833514</td>\n","      <td>2019.000000</td>\n","      <td>140.000000</td>\n","      <td>-5.370000</td>\n","      <td>52.000000</td>\n","      <td>80.000000</td>\n","      <td>72.000000</td>\n","      <td>66.000000</td>\n","      <td>16.000000</td>\n","      <td>25.000000</td>\n","      <td>44.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>2024.000000</td>\n","      <td>200.000000</td>\n","      <td>3.740000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>99.000000</td>\n","      <td>99.000000</td>\n","      <td>97.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d1654c74-d1b3-4c86-a517-23117d99f8f0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d1654c74-d1b3-4c86-a517-23117d99f8f0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d1654c74-d1b3-4c86-a517-23117d99f8f0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-0723363c-0d6e-4fc0-826b-4945a4aabf9f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0723363c-0d6e-4fc0-826b-4945a4aabf9f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-0723363c-0d6e-4fc0-826b-4945a4aabf9f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"variance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83784.55317484698,\n        \"min\": -1.0,\n        \"max\": 236979.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          236979.0,\n          0.6589251465992606,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Release Date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83182.37953268661,\n        \"min\": 14.756303481723128,\n        \"max\": 236979.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2008.4727085522345,\n          2015.0,\n          236979.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tempo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83747.39326701524,\n        \"min\": 28.96639163628136,\n        \"max\": 236979.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120.60960253862156,\n          120.0,\n          236979.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loudness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83788.2496441323,\n        \"min\": -46.77,\n        \"max\": 236979.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -8.0386531296022,\n          -7.19,\n          236979.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Popularity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83770.75482365166,\n        \"min\": 0.0,\n        \"max\": 236979.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          40.003802024651975,\n          39.0,\n          236979.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83765.72113922583,\n        \"min\": 0.0,\n        \"max\": 236979.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          62.3690411386663,\n          64.0,\n          236979.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Danceability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83766.49092774835,\n        \"min\": 6.0,\n        \"max\": 236979.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          59.12778769426827,\n          60.0,\n          236979.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Positiveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83768.95258192971,\n        \"min\": 0.0,\n        \"max\": 236979.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          47.6570708796982,\n          47.0,\n          236979.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Speechiness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83777.19952128427,\n        \"min\": 2.0,\n        \"max\": 236979.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          11.747606327986867,\n          6.0,\n          236979.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Liveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83775.36775897851,\n        \"min\": 1.0,\n        \"max\": 236979.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          19.904417691019034,\n          13.0,\n          236979.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Acousticness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83773.86553470517,\n        \"min\": 0.0,\n        \"max\": 236979.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          26.156136197722162,\n          14.0,\n          236979.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Instrumentalness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83778.51827654016,\n        \"min\": 0.0,\n        \"max\": 236979.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5.440241540389655,\n          100.0,\n          17.662832791379532\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":377}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":648},"id":"JJccMlhoWgyt","executionInfo":{"status":"ok","timestamp":1746110562477,"user_tz":-180,"elapsed":143,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"005dfc5e-2e4f-49da-9596-86eeef048692"},"execution_count":378,"outputs":[{"output_type":"execute_result","data":{"text/plain":["artist              0\n","song                8\n","emotion             0\n","variance            0\n","Genre               0\n","Release Date        0\n","Key                 0\n","Tempo               0\n","Loudness            0\n","Explicit            0\n","Popularity          0\n","Energy              0\n","Danceability        0\n","Positiveness        0\n","Speechiness         0\n","Liveness            0\n","Acousticness        0\n","Instrumentalness    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>artist</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>song</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>emotion</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>variance</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Genre</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Release Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Key</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Tempo</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Loudness</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Explicit</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Popularity</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Energy</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Danceability</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Positiveness</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Speechiness</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Liveness</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Acousticness</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Instrumentalness</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":378}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W-blhWOsWjvJ","executionInfo":{"status":"ok","timestamp":1746110564073,"user_tz":-180,"elapsed":214,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"3f83a3ba-6927-4aae-e571-2bacf697d4c1"},"execution_count":379,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(2)"]},"metadata":{},"execution_count":379}]},{"cell_type":"code","source":["print(len(df))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vqEl1TB7_rag","executionInfo":{"status":"ok","timestamp":1746110565240,"user_tz":-180,"elapsed":4,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"3f944b5b-2a14-4bd9-833a-4345fb819cdd"},"execution_count":380,"outputs":[{"output_type":"stream","name":"stdout","text":["236979\n"]}]},{"cell_type":"code","source":["df = df.drop_duplicates()"],"metadata":{"id":"u0wjphp8_FW2","executionInfo":{"status":"ok","timestamp":1746110566491,"user_tz":-180,"elapsed":214,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}}},"execution_count":381,"outputs":[]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oA65JCui_O29","executionInfo":{"status":"ok","timestamp":1746110567337,"user_tz":-180,"elapsed":195,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"91265cb6-184f-4ba9-c72e-ed957084fb66"},"execution_count":382,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(0)"]},"metadata":{},"execution_count":382}]},{"cell_type":"code","source":["print(len(df))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IQPdZs1rAtwg","executionInfo":{"status":"ok","timestamp":1746110571473,"user_tz":-180,"elapsed":5,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"041d1fc3-1c5d-46d6-95e9-cfb33fa40ffe"},"execution_count":383,"outputs":[{"output_type":"stream","name":"stdout","text":["236977\n"]}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DbUeiYQ8BFDr","executionInfo":{"status":"ok","timestamp":1746110574995,"user_tz":-180,"elapsed":5,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"d6fb293b-0756-4371-9571-40414d6e3184"},"execution_count":384,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(236977, 18)"]},"metadata":{},"execution_count":384}]},{"cell_type":"code","source":["top_genres = df['Genre'].value_counts().nlargest(11).index\n","df['Genre']=df['Genre'].apply(lambda x: x if x in top_genres else 'other')\n"],"metadata":{"id":"QWMz5cbt_eeZ","executionInfo":{"status":"ok","timestamp":1746110577760,"user_tz":-180,"elapsed":172,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}}},"execution_count":385,"outputs":[]},{"cell_type":"code","source":["#plt.figure(figsize=(12,6))\n","#sns.countplot(data=df, x='Genre', order=df['Genre'].value_counts().index)\n","#plt.title('Top 10 Genres + Other')\n","#plt.xticks(rotation=45)\n","#plt.show()"],"metadata":{"id":"jyr6NMZ6-C4E","executionInfo":{"status":"ok","timestamp":1746110598811,"user_tz":-180,"elapsed":6,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}}},"execution_count":386,"outputs":[]},{"cell_type":"code","source":["df['Genre']=df['Genre'].replace('Unknown,Unknown,Unknown','other')\n","print(df['Genre'].value_counts(normalize=True))\n","sns.countplot(data=df, x='Genre', order=df['Genre'].value_counts().index)\n","plt.title('Top 10 Genres + Other')\n","plt.xticks(rotation=45)\n","#plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":955},"id":"jyIyjG7P-TcM","executionInfo":{"status":"ok","timestamp":1746110602010,"user_tz":-180,"elapsed":758,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"ea191425-a7d1-4b7a-f201-76e316e94c4a"},"execution_count":387,"outputs":[{"output_type":"stream","name":"stdout","text":["Genre\n","other          0.288117\n","pop            0.197834\n","rap            0.140111\n","alternative    0.080383\n","hip-hop        0.073070\n","rock           0.054672\n","folk           0.044814\n","metal          0.044262\n","soul           0.036881\n","electronic     0.021707\n","jazz           0.018149\n","Name: proportion, dtype: float64\n"]},{"output_type":"execute_result","data":{"text/plain":["([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n"," [Text(0, 0, 'other'),\n","  Text(1, 0, 'pop'),\n","  Text(2, 0, 'rap'),\n","  Text(3, 0, 'alternative'),\n","  Text(4, 0, 'hip-hop'),\n","  Text(5, 0, 'rock'),\n","  Text(6, 0, 'folk'),\n","  Text(7, 0, 'metal'),\n","  Text(8, 0, 'soul'),\n","  Text(9, 0, 'electronic'),\n","  Text(10, 0, 'jazz')])"]},"metadata":{},"execution_count":387},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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GPQ2RUVFwdHRUWnz97Pc9GfXpWzz9zPuoqKioNVqYWlpCVNTU5iamqbZRr+NtJibm8Pc3PzDnywRERFlS1mip2nFihWwt7eHn5+fsszDwwM5c+bE/v37lWXXr1/HnTt34OXlBQDw8vLCxYsXDc5y27dvH7RaLVxdXZU2Kbehb6PfhpmZGTw8PAza6HQ67N+/X2lDREREZPSeJp1OhxUrVqB79+7IkeP/yrGxsUGvXr0QGBgIOzs7aLVaDBo0CF5eXqhevToAoHHjxnB1dUXXrl0xffp0REZGYvz48fD391d6gfr164cFCxZg5MiR6NmzJw4cOIBNmzZh9+7dyr4CAwPRvXt3VKlSBdWqVcOcOXMQHx+PHj16ZO6LQURERFlXJpzN91579uwRAHL9+vVU6169eiUDBgyQPHnyiJWVlbRs2VIePnxo0ObWrVvi6+srlpaWki9fPhk2bJi8efPGoM3BgwelUqVKYmZmJsWKFZMVK1ak2tf8+fOlcOHCYmZmJtWqVZMTJ0580PPglANERETZz4d8f2tERIyc2z4JcXFxsLGxQWxsLC/YS0RElE18yPd3lhjTRERERJTVGX1M06fOY8RPxi7BQNiMbsYugYiIKFtiTxMRERGRCgxNRERERCowNBERERGpwNBEREREpAJDExEREZEKDE1EREREKjA0EREREanA0ERERESkAkMTERERkQoMTUREREQqMDQRERERqcDQRERERKQCQxMRERGRCgxNRERERCowNBERERGpwNBEREREpAJDExEREZEKDE1EREREKjA0EREREanA0ERERESkAkMTERERkQoMTUREREQqMDQRERERqcDQRERERKQCQxMRERGRCgxNRERERCowNBERERGpwNBEREREpAJDExEREZEKDE1EREREKjA0EREREanA0ERERESkAkMTERERkQoMTUREREQqMDQRERERqcDQRERERKQCQxMRERGRCgxNRERERCoYPTTdv38fXbp0Qd68eWFpaQk3NzecOXNGWS8iCAoKQoECBWBpaQlvb2/cuHHDYBtPnz5F586dodVqYWtri169euHFixcGbS5cuIDatWvDwsICzs7OmD59eqpagoODUaZMGVhYWMDNzQ2//PJLxjxpIiIiynaMGpqePXuGmjVrImfOnPj1119x5coVzJo1C3ny5FHaTJ8+HfPmzcOS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cEJO+lBZdkwTERERUVbC0ERERESkAkMTERERkQoMTUREREQqMDQRERERqcDQRERERKQCQxMRERGRCgxNRERERCowNBERERGpwNBEREREpAJDExEREZEKDE1EREREKjA0EREREanA0ERERESkAkMTERERkQoMTUREREQqMDQRERERqcDQRERERKRCDmMXQEREROp4jPjJ2CWkEjajm7FLyDTsaSIiIiJSgaGJiIiISAWGJiIiIiIVOKaJiIiIMlRWG4v1seOw2NNEREREpAJDExEREZEKDE1EREREKjA0EREREanA0ERERESkAkMTERERkQoMTUREREQqMDQRERERqcDQRERERKQCQxMRERGRCgxNRERERCowNBERERGpwNBEREREpAJDExEREZEKDE1EREREKjA0EREREanA0ERERESkAkPT3yxcuBBFixaFhYUFPD09cerUKWOXRERERFkAQ1MKGzduRGBgICZMmICzZ8+iYsWK8PHxQXR0tLFLIyIiIiNjaErhu+++Q58+fdCjRw+4urpiyZIlsLKywvLly41dGhERERlZDmMXkFUkJiYiLCwMY8aMUZaZmJjA29sboaGhqdonJCQgISFBuR8bGwsAiIuLM2iXnPAqgyr+OH+vLy2s+d9jzZmDNWcO1pw5smPNQPasO2XN+v8XkX9+oJCIiNy/f18AyPHjxw2WjxgxQqpVq5aq/YQJEwQAb7zxxhtvvPH2Cdzu3r37j1mBPU0facyYMQgMDFTu63Q6PH36FHnz5oVGo0nXfcXFxcHZ2Rl3796FVqtN121nFNacOVhz5mDNmYM1Z57sWHdG1SwieP78OZycnP6xLUPT/5cvXz6YmpoiKirKYHlUVBQcHR1TtTc3N4e5ubnBMltb24wsEVqtNtu8ufVYc+ZgzZmDNWcO1px5smPdGVGzjY2NqnYcCP7/mZmZwcPDA/v371eW6XQ67N+/H15eXkasjIiIiLIC9jSlEBgYiO7du6NKlSqoVq0a5syZg/j4ePTo0cPYpREREZGRMTSl0L59ezx69AhBQUGIjIxEpUqVEBISAgcHB6PWZW5ujgkTJqQ6HJiVsebMwZozB2vOHKw582THurNCzRoRNefYEREREf23cUwTERERkQoMTUREREQqMDQRERERqcDQRERERKQCQxMREVE64zlWnyaGJiIiylZ0Op2xS3in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\n"},"metadata":{}}]},{"cell_type":"code","source":["feature_cols = [\n","    'Tempo','Loudness','Energy',\n","    'Danceability','Positiveness','Speechiness',\n","    'Liveness','Acousticness','Instrumentalness'\n","]\n","\n","# Drop missing feature rows\n","df_clean = df.dropna(subset=feature_cols)\n","# Drop duplicate (song, artist)\n","df_clean = df_clean.drop_duplicates(subset=['song', 'artist']).reset_index(drop=True)\n","# Scale features\n","scaler = StandardScaler()\n","X_scaled = scaler.fit_transform(df_clean[feature_cols])\n","\n","# Map (song, artist) to index\n","song_to_index = pd.Series(df_clean.index, index=list(zip(df_clean['song'], df_clean['artist'])))\n"],"metadata":{"id":"KFRI1UFNlzNV","executionInfo":{"status":"ok","timestamp":1746110619239,"user_tz":-180,"elapsed":442,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}}},"execution_count":388,"outputs":[]},{"cell_type":"code","source":["print(df.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tEBCKKv6QpVx","executionInfo":{"status":"ok","timestamp":1746110625648,"user_tz":-180,"elapsed":6,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"f01b1ff2-1b77-4fdc-8b5b-ff829bbb63f7"},"execution_count":389,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['artist', 'song', 'emotion', 'variance', 'Genre', 'Release Date', 'Key',\n","       'Tempo', 'Loudness', 'Explicit', 'Popularity', 'Energy', 'Danceability',\n","       'Positiveness', 'Speechiness', 'Liveness', 'Acousticness',\n","       'Instrumentalness'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["from sklearn.decomposition import PCA\n","feature_cols = [\n","    'Tempo','Loudness','Energy',\n","    'Danceability','Positiveness','Speechiness',\n","    'Liveness','Acousticness','Instrumentalness'\n","]\n","\n","# Drop missing feature rows\n","df_clean = df.dropna(subset=feature_cols)\n","# Drop duplicate (song, artist)\n","df_clean = df_clean.drop_duplicates(subset=['song', 'artist']).reset_index(drop=True)\n","\n","pca = PCA()\n","X_scaled = scaler.fit_transform(df_clean[feature_cols])\n","X_pca = pca.fit_transform(X_scaled)\n","W = pca.components_.T\n","#print(W)\n","k = 5  # or pick enough to cover 80-90% variance\n","feature_importance = np.sum(W[:, :k]**2, axis=1)\n","weights = feature_importance / np.mean(feature_importance)\n","X_scaled_weighted = X_scaled * weights\n","print(X_scaled_weighted)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_ssf7bTWzG48","executionInfo":{"status":"ok","timestamp":1746110692992,"user_tz":-180,"elapsed":300,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"b2979ebd-d582-4826-9114-5f44f7afa6de"},"execution_count":390,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0.41711808  0.3474918   0.48134166 ...  0.93449272 -0.34376034\n","  -0.46660087]\n"," [-1.04926673 -0.45821687 -0.8071717  ... -1.0870257   0.74772678\n","  -0.46660087]\n"," [ 1.03751165  0.3987021   0.48134166 ... -1.00279576 -0.11114833\n","  -0.29427557]\n"," ...\n"," [ 0.75551458  0.22458709  0.32794721 ...  0.17642331 -0.37954681\n","  -0.46660087]\n"," [ 0.41711808 -0.84741512  0.23591054 ... -1.0870257  -0.37954681\n","  -0.46660087]\n"," [ 3.06789062  0.15118566  0.88016723 ...  1.52410226 -0.46901297\n","   6.77106194]]\n"]}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","from sklearn.decomposition import PCA\n","import numpy as np\n","\n","feature_cols = [\n","    'Tempo','Loudness','Energy',\n","    'Danceability','Positiveness','Speechiness',\n","    'Liveness','Acousticness','Instrumentalness'\n","]\n","\n","# 1. Clean\n","df_clean = df.dropna(subset=feature_cols)\n","df_clean = df_clean.drop_duplicates(subset=['song', 'artist']).reset_index(drop=True)\n","\n","# 2. Scale\n","scaler = StandardScaler()\n","X_scaled = scaler.fit_transform(df_clean[feature_cols])\n","\n","# 3. PCA\n","pca = PCA()\n","X_pca = pca.fit_transform(X_scaled)\n","W = pca.components_.T  # shape (n_features, n_components)\n","\n","# 4. Compute feature importance\n","k = 5  # number of components to consider\n","feature_importance = np.sum(W[:, :k]**2, axis=1)\n","\n","# 5. Normalize\n","weights = feature_importance / np.mean(feature_importance)\n","\n","print(\"Feature Weights from PCA:\")\n","for feat, w in zip(feature_cols, weights):\n","    print(f\"{feat}: {w:.2f}\")\n","\n","# 6. Apply weights\n","X_scaled_weighted = X_scaled * weights\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ULXzKZeX0qet","executionInfo":{"status":"ok","timestamp":1746110695281,"user_tz":-180,"elapsed":273,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"46cfeec0-adb5-42ef-fff9-59652f7e5138"},"execution_count":391,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature Weights from PCA:\n","Tempo: 1.63\n","Loudness: 0.66\n","Energy: 0.68\n","Danceability: 0.90\n","Positiveness: 0.75\n","Speechiness: 0.95\n","Liveness: 1.39\n","Acousticness: 0.52\n","Instrumentalness: 1.52\n"]}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","from sklearn.decomposition import PCA\n","from sklearn.metrics.pairwise import cosine_similarity\n","import numpy as np\n","import pandas as pd\n","\n","def build_weighted_similarity_matrix(df, feature_cols, n_pca_components=5):\n","    # 1️⃣ Clean dataset\n","    df_clean = df.dropna(subset=feature_cols)\n","    df_clean = df_clean.drop_duplicates(subset=['song', 'artist']).reset_index(drop=True)\n","\n","    # 2️⃣ Scale features\n","    scaler = StandardScaler()\n","    X_scaled = scaler.fit_transform(df_clean[feature_cols])\n","\n","    # 3️⃣ PCA\n","    pca = PCA()\n","    X_pca = pca.fit_transform(X_scaled)\n","    W = pca.components_.T  # (n_features, n_components)\n","\n","    # 4️⃣ Compute feature importance\n","    feature_importance = np.sum(W[:, :n_pca_components] ** 2, axis=1)\n","    weights = feature_importance / np.mean(feature_importance)\n","\n","    # 5️⃣ Apply weights\n","    X_scaled_weighted = X_scaled * weights\n","\n","    # 6️⃣ Build lookup index\n","    song_to_index = pd.Series(df_clean.index, index=list(zip(df_clean['song'], df_clean['artist'])))\n","\n","    return df_clean, X_scaled_weighted, song_to_index, weights\n","\n","def recommend_similar_songs(song_name, artist_name, X_scaled_weighted, df_clean, song_to_index, top_n=5):\n","    lookup_key = (song_name, artist_name)\n","\n","    if lookup_key not in song_to_index:\n","        print(f\"Song '{song_name}' by '{artist_name}' not found. Returning random selection.\")\n","        return df_clean.sample(n=top_n)[['song', 'artist', 'Genre', 'emotion'] + feature_cols]\n","\n","    idx = song_to_index[lookup_key]\n","\n","    target_vec = X_scaled_weighted[idx].reshape(1, -1)\n","\n","    sim_scores = cosine_similarity(target_vec, X_scaled_weighted)[0]\n","\n","    top_indices = np.argsort(sim_scores)[::-1]\n","    top_indices = top_indices[top_indices != idx][:top_n]\n","\n","    result = df_clean.iloc[top_indices][['song', 'artist', 'Genre', 'emotion'] + feature_cols].copy()\n","    result['similarity'] = sim_scores[top_indices]\n","\n","    return result\n"],"metadata":{"id":"hKfQdbnq03Ug","executionInfo":{"status":"ok","timestamp":1746110704738,"user_tz":-180,"elapsed":1,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}}},"execution_count":392,"outputs":[]},{"cell_type":"code","source":["feature_cols = [\n","    'Tempo','Loudness','Energy','Danceability','Positiveness',\n","    'Speechiness','Liveness','Acousticness','Instrumentalness'\n","]\n","\n","# 1️⃣ Build similarity matrix\n","df_clean, X_scaled_weighted, song_to_index, weights = build_weighted_similarity_matrix(df, feature_cols)\n","\n","# Optional: print feature weights\n","print(\"Feature Weights:\")\n","for feat, w in zip(feature_cols, weights):\n","    print(f\"{feat}: {w:.2f}\")\n","\n","# 2️⃣ Recommend similar songs\n","recommendations = recommend_similar_songs(\"IDGAF\", \"Dua Lipa\", X_scaled_weighted, df_clean, song_to_index, top_n=5)\n","print(recommendations)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GtqZCPYs06td","executionInfo":{"status":"ok","timestamp":1746110716191,"user_tz":-180,"elapsed":878,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"a634ae6e-1959-4bb3-837a-d78653bbc4f9"},"execution_count":393,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature Weights:\n","Tempo: 1.63\n","Loudness: 0.66\n","Energy: 0.68\n","Danceability: 0.90\n","Positiveness: 0.75\n","Speechiness: 0.95\n","Liveness: 1.39\n","Acousticness: 0.52\n","Instrumentalness: 1.52\n","                                            song  \\\n","187493  Do I Wanna Know? BBC Radio 1 Live Lounge   \n","228453                                 Hopscotch   \n","228454                                Calculator   \n","228452                            Poolside Manor   \n","228451                                 I Want In   \n","\n","                                    artist  Genre  emotion  Tempo  Loudness  \\\n","187493                            Dua Lipa    pop  sadness     97     -5.98   \n","228453          88rising, AUGUST 08 & Joji  other      joy    100     -6.74   \n","228454  88rising, AUGUST 08 & Barney Bones  other  sadness    100     -6.74   \n","228452          88rising, AUGUST 08 & NIKI  other      joy    100     -6.74   \n","228451          88rising, AUGUST 08 & NIKI  other      joy    100     -6.74   \n","\n","        Energy  Danceability  Positiveness  Speechiness  Liveness  \\\n","187493      54            84            51            9         8   \n","228453      55            80            46            8         9   \n","228454      55            80            46            8         9   \n","228452      55            80            46            8         9   \n","228451      55            80            46            8         9   \n","\n","        Acousticness  Instrumentalness  similarity  \n","187493             4                 0    1.000000  \n","228453             3                 0    0.993565  \n","228454             3                 0    0.993565  \n","228452             3                 0    0.993565  \n","228451             3                 0    0.993565  \n"]}]},{"cell_type":"code","source":["def recommend_similar_songs(song_name, artist_name, top_n=5):\n","    lookup_key = (song_name, artist_name)\n","\n","    if lookup_key not in song_to_index:\n","        print(f\"Song '{song_name}' by '{artist_name}' not found. Returning random selection.\")\n","        return df_clean.sample(n=top_n)[['song', 'artist', 'Genre', 'emotion'] + feature_cols]\n","\n","    idx = song_to_index[lookup_key]\n","\n","    # Get the feature vector of the selected song\n","    target_vec = X_scaled[idx].reshape(1, -1)\n","\n","    # Compute cosine similarity between target_vec and all other songs\n","    sim_scores = cosine_similarity(target_vec, X_scaled)[0]\n","\n","    # Sort indices by similarity (highest first)\n","    top_indices = np.argsort(sim_scores)[::-1]\n","\n","    # Exclude the song itself\n","    top_indices = top_indices[top_indices != idx][:top_n]\n","\n","    # Get metadata and similarity scores\n","    result = df_clean.iloc[top_indices][['song', 'artist', 'Genre', 'emotion'] + feature_cols].copy()\n","    result['similarity'] = sim_scores[top_indices]\n","\n","    return result\n"],"metadata":{"id":"RfjADOGtgJ-5","executionInfo":{"status":"ok","timestamp":1746110733696,"user_tz":-180,"elapsed":19,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}}},"execution_count":394,"outputs":[]},{"cell_type":"code","source":["df_clean[df_clean['artist']==\"Dua Lipa\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"dSQ6McvkvIrk","executionInfo":{"status":"ok","timestamp":1746110736377,"user_tz":-180,"elapsed":126,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"608adafe-a84f-41f8-d4e3-90426d293ac8"},"execution_count":395,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          artist                                      song  emotion  variance  \\\n","187431  Dua Lipa                            Dont Start Now  sadness  0.833514   \n","187432  Dua Lipa                                     IDGAF      joy  0.833514   \n","187433  Dua Lipa                                Levitating      joy  0.833514   \n","187434  Dua Lipa                       Blow Your Mind Mwah     love  0.833514   \n","187435  Dua Lipa                            Break My Heart     fear  0.833514   \n","...          ...                                       ...      ...       ...   \n","187491  Dua Lipa                              Save Someone  sadness  0.833514   \n","187492  Dua Lipa         Between a Bullet and a Heartbreak  sadness  0.833514   \n","187493  Dua Lipa  Do I Wanna Know? BBC Radio 1 Live Lounge  sadness  0.833514   \n","187494  Dua Lipa                     Telling it Like it Is    anger  0.833514   \n","187495  Dua Lipa                        High Wild and Free      joy  0.833514   \n","\n","       Genre  Release Date     Key  Tempo  Loudness Explicit  Popularity  \\\n","187431   pop          2020   B min    124     -4.52       No          81   \n","187432   pop          2017   G Maj     97     -5.98      Yes          79   \n","187433   pop          2020  F# min    103     -3.79       No          81   \n","187434   pop          2017   D min    109     -4.76      Yes          65   \n","187435   pop          2020   E min    113     -3.43       No          76   \n","...      ...           ...     ...    ...       ...      ...         ...   \n","187491   pop          2024  G# min    127     -4.72       No          84   \n","187492   pop          2018   C Maj    118     -6.44       No          71   \n","187493   pop          2017   G Maj     97     -5.98      Yes          79   \n","187494   pop          2021   B min    124     -6.64       No          69   \n","187495   pop          2024  G# min    127     -4.72       No          87   \n","\n","        Energy  Danceability  Positiveness  Speechiness  Liveness  \\\n","187431      79            79            68            8        10   \n","187432      54            84            51            9         8   \n","187433      82            70            92            6         7   \n","187434      80            65            49           12         9   \n","187435      73            73            47            9        35   \n","...        ...           ...           ...          ...       ...   \n","187491      77            68            71            5        11   \n","187492      67            59            50            5        34   \n","187493      54            84            51            9         8   \n","187494      72            54            49            6        61   \n","187495      77            68            71            5        11   \n","\n","        Acousticness  Instrumentalness  \n","187431             1                 0  \n","187432             4                 0  \n","187433             1                 0  \n","187434             2                 0  \n","187435            17                 0  \n","...              ...               ...  \n","187491             3                 0  \n","187492             1                 0  \n","187493             4                 0  \n","187494             3                 0  \n","187495             3                 0  \n","\n","[65 rows x 18 columns]"],"text/html":["\n","  <div id=\"df-28716148-edb9-4a1a-b1ae-9c3d23593999\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>artist</th>\n","      <th>song</th>\n","      <th>emotion</th>\n","      <th>variance</th>\n","      <th>Genre</th>\n","      <th>Release Date</th>\n","      <th>Key</th>\n","      <th>Tempo</th>\n","      <th>Loudness</th>\n","      <th>Explicit</th>\n","      <th>Popularity</th>\n","      <th>Energy</th>\n","      <th>Danceability</th>\n","      <th>Positiveness</th>\n","      <th>Speechiness</th>\n","      <th>Liveness</th>\n","      <th>Acousticness</th>\n","      <th>Instrumentalness</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>187431</th>\n","      <td>Dua Lipa</td>\n","      <td>Dont Start Now</td>\n","      <td>sadness</td>\n","      <td>0.833514</td>\n","      <td>pop</td>\n","      <td>2020</td>\n","      <td>B min</td>\n","      <td>124</td>\n","      <td>-4.52</td>\n","      <td>No</td>\n","      <td>81</td>\n","      <td>79</td>\n","      <td>79</td>\n","      <td>68</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>187432</th>\n","      <td>Dua Lipa</td>\n","      <td>IDGAF</td>\n","      <td>joy</td>\n","      <td>0.833514</td>\n","      <td>pop</td>\n","      <td>2017</td>\n","      <td>G Maj</td>\n","      <td>97</td>\n","      <td>-5.98</td>\n","      <td>Yes</td>\n","      <td>79</td>\n","      <td>54</td>\n","      <td>84</td>\n","      <td>51</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>187433</th>\n","      <td>Dua Lipa</td>\n","      <td>Levitating</td>\n","      <td>joy</td>\n","      <td>0.833514</td>\n","      <td>pop</td>\n","      <td>2020</td>\n","      <td>F# min</td>\n","      <td>103</td>\n","      <td>-3.79</td>\n","      <td>No</td>\n","      <td>81</td>\n","      <td>82</td>\n","      <td>70</td>\n","      <td>92</td>\n","      <td>6</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>187434</th>\n","      <td>Dua Lipa</td>\n","      <td>Blow Your Mind Mwah</td>\n","      <td>love</td>\n","      <td>0.833514</td>\n","      <td>pop</td>\n","      <td>2017</td>\n","      <td>D min</td>\n","      <td>109</td>\n","      <td>-4.76</td>\n","      <td>Yes</td>\n","      <td>65</td>\n","      <td>80</td>\n","      <td>65</td>\n","      <td>49</td>\n","      <td>12</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>187435</th>\n","      <td>Dua Lipa</td>\n","      <td>Break My Heart</td>\n","      <td>fear</td>\n","      <td>0.833514</td>\n","      <td>pop</td>\n","      <td>2020</td>\n","      <td>E min</td>\n","      <td>113</td>\n","      <td>-3.43</td>\n","      <td>No</td>\n","      <td>76</td>\n","      <td>73</td>\n","      <td>73</td>\n","      <td>47</td>\n","      <td>9</td>\n","      <td>35</td>\n","      <td>17</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>187491</th>\n","      <td>Dua Lipa</td>\n","      <td>Save Someone</td>\n","      <td>sadness</td>\n","      <td>0.833514</td>\n","      <td>pop</td>\n","      <td>2024</td>\n","      <td>G# min</td>\n","      <td>127</td>\n","      <td>-4.72</td>\n","      <td>No</td>\n","      <td>84</td>\n","      <td>77</td>\n","      <td>68</td>\n","      <td>71</td>\n","      <td>5</td>\n","      <td>11</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>187492</th>\n","      <td>Dua Lipa</td>\n","      <td>Between a Bullet and a Heartbreak</td>\n","      <td>sadness</td>\n","      <td>0.833514</td>\n","      <td>pop</td>\n","      <td>2018</td>\n","      <td>C Maj</td>\n","      <td>118</td>\n","      <td>-6.44</td>\n","      <td>No</td>\n","      <td>71</td>\n","      <td>67</td>\n","      <td>59</td>\n","      <td>50</td>\n","      <td>5</td>\n","      <td>34</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>187493</th>\n","      <td>Dua Lipa</td>\n","      <td>Do I Wanna Know? BBC Radio 1 Live Lounge</td>\n","      <td>sadness</td>\n","      <td>0.833514</td>\n","      <td>pop</td>\n","      <td>2017</td>\n","      <td>G Maj</td>\n","      <td>97</td>\n","      <td>-5.98</td>\n","      <td>Yes</td>\n","      <td>79</td>\n","      <td>54</td>\n","      <td>84</td>\n","      <td>51</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>187494</th>\n","      <td>Dua Lipa</td>\n","      <td>Telling it Like it Is</td>\n","      <td>anger</td>\n","      <td>0.833514</td>\n","      <td>pop</td>\n","      <td>2021</td>\n","      <td>B min</td>\n","      <td>124</td>\n","      <td>-6.64</td>\n","      <td>No</td>\n","      <td>69</td>\n","      <td>72</td>\n","      <td>54</td>\n","      <td>49</td>\n","      <td>6</td>\n","      <td>61</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>187495</th>\n","      <td>Dua Lipa</td>\n","      <td>High Wild and Free</td>\n","      <td>joy</td>\n","      <td>0.833514</td>\n","      <td>pop</td>\n","      <td>2024</td>\n","      <td>G# min</td>\n","      <td>127</td>\n","      <td>-4.72</td>\n","      <td>No</td>\n","      <td>87</td>\n","      <td>77</td>\n","      <td>68</td>\n","      <td>71</td>\n","      <td>5</td>\n","      <td>11</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>65 rows × 18 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28716148-edb9-4a1a-b1ae-9c3d23593999')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-28716148-edb9-4a1a-b1ae-9c3d23593999 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-28716148-edb9-4a1a-b1ae-9c3d23593999');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b10af186-7f0f-4a2c-ae2e-8eb5ac40f9e6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b10af186-7f0f-4a2c-ae2e-8eb5ac40f9e6')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b10af186-7f0f-4a2c-ae2e-8eb5ac40f9e6 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_clean[df_clean['artist']==\\\"Dua Lipa\\\"]\",\n  \"rows\": 65,\n  \"fields\": [\n    {\n      \"column\": \"artist\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Dua Lipa\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"song\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 65,\n        \"samples\": [\n          \"Jealousy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"emotion\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"joy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"variance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.713178136967714e-16,\n        \"min\": 0.8335142456515902,\n        \"max\": 0.8335142456515902,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.8335142456515902\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"pop\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Release Date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 2015,\n        \"max\": 2024,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          2016\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Key\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"B min\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tempo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20,\n        \"min\": 76,\n        \"max\": 188,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          90\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loudness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.1436436338267972,\n        \"min\": -16.39,\n        \"max\": -3.31,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          -4.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Explicit\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Popularity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 0,\n        \"max\": 92,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          92\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 14,\n        \"max\": 90,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          77\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Danceability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 36,\n        \"max\": 91,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Positiveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 13,\n        \"max\": 92,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Speechiness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 3,\n        \"max\": 32,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Liveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 5,\n        \"max\": 70,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Acousticness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 0,\n        \"max\": 95,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Instrumentalness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 86,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":395}]},{"cell_type":"code","source":["recommendations = recommend_similar_songs(\"IDGAF\", \"Dua Lipa\", top_n=5)\n","print(recommendations)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0YqsxK89g3IG","executionInfo":{"status":"ok","timestamp":1746110739252,"user_tz":-180,"elapsed":48,"user":{"displayName":"Tahel Barak","userId":"08555115476902020877"}},"outputId":"77c3d435-5f92-437e-fb6d-f9268462f29a"},"execution_count":396,"outputs":[{"output_type":"stream","name":"stdout","text":["                                            song  \\\n","187493  Do I Wanna Know? BBC Radio 1 Live Lounge   \n","64598                              Bread Winners   \n","57593                                  Juveniles   \n","162835                                      DWAY   \n","228451                                 I Want In   \n","\n","                                    artist  Genre  emotion  Tempo  Loudness  \\\n","187493                            Dua Lipa    pop  sadness     97     -5.98   \n","64598   YBN, YBN Nahmir & YBN Almighty Jay  other    anger     98     -5.87   \n","57593                         wifisfuneral    rap    anger     98     -5.87   \n","162835                     Jackson Wang ()  other      joy     99     -5.96   \n","228451          88rising, AUGUST 08 & NIKI  other      joy    100     -6.74   \n","\n","        Energy  Danceability  Positiveness  Speechiness  Liveness  \\\n","187493      54            84            51            9         8   \n","64598       52            89            49           10        10   \n","57593       52            89            49           10        10   \n","162835      50            84            49            6         9   \n","228451      55            80            46            8         9   \n","\n","        Acousticness  Instrumentalness  similarity  \n","187493             4                 0    1.000000  \n","64598              4                 0    0.990429  \n","57593              4                 0    0.990429  \n","162835             1                 0    0.987900  \n","228451             3                 0    0.987242  \n"]}]}]}